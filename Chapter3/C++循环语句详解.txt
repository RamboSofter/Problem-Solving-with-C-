人生无非是一件又一件的倒霉事。
德娜·文森特·默蕾，写给亚瑟·戴瑞森·菲克的信，1930 年 10 月 24 日

任何能多次重复一个或一组语句的程序结构都是循环。在循环中重复的语句(或语句组)称为循环主体或循环体。循环主
体的每一次重复都称为一次循环迭代。
表达式 v++首先求值为变量 v 的值，然后变量 v 的值递增 1。相反，如果将++放到变量名之前，上述两个操作的顺序也会反过来。例如，表达式++v 先使变量 v 的值递增 1，
再返回 v 递增过的值。

记住，++在变量之前，先递增再返回值；++在变量之后，先返回值再递增。
不可以将递增与递减操作符应用于除单个变量以外的其他任何东西。在 C++中，(x +y)++，--(x + y)和 5++等表达式都是无效的。
for 语句以关键字 for 开头，随后要在圆括号中指定三点，告诉计算机如何处理控制变量。for 语句的头部看起来像下面这样：
for (Initialization_Action; Boolean_Expression; Update_Action)
第一个表达式指出变量如何初始化；第二个是布尔表达式，用于检查循环应在什么时候终止；最后一个表达式指出循环主体每次迭代之后，循环控制变量如何更新。

不要在 for 循环头的结束圆括号之后添加分号。
也就是说，分号本身就是一个语句，它称为空语句，也称为 null 语句。空语句不执行任何操作，但仍是一个语句。

选择什么循环语句？
设计循环时，具体要用哪种 C++循环语句最好推迟到设计阶段的末期再做决定。首先用伪代码设计出循环，再将伪代码转换成 C++代码。转换时，很容易决定具体使用
什么 C++循环语句。
如果循环要求进行数值计算，而且要用到一个每次循环都发生均匀变化的变量，就使用 for 循环。事实上，但凡要用循环执行数值计算，就应考虑 for。虽然并非肯定适合，
但在执行数值计算时，for 通常都是最清楚、最容易实现的循环。其他大多数情况都应使用 while 或 do-while 循环；很容易决定具体选用哪一个。如果希望循环主体
至少执行一次，就用 do-while。如果循环主体可能一次都不执行，就必须使用 while。使用 while 循环的一个常见的情形是：虽然要读取输入，但允许没有任何数据。
