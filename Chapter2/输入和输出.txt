输入流是提供给计算机并由程序使用的一系列输入。
输出流是程序生成的一系列输出。
箭头符号<<通常称为插入操作符。
include 预编译指令。它将 iostream 库“包含”到程序中，使程序能使用 cin 和 cout：#include <iostream>
命名空间组织名称。命名空间是很多名称(比如 cin 和 cout)的集合。通过以下方式指定命名空间的语句称为 using预编译指令：
using namespace std;
这个特定的 using 指令表明程序准备使用 std(指 standard)命名空间。这意味着你使用的名称具有 std 命名空间为其定义的含义。
字符前的符号\告诉编译器：\之后的字符具有特殊含义，不能沿用其字面含义。这样的一个字符序列称为转义序列。
换行符 \n  水平制表符 \t  响铃符 \a   反斜杠 \\   双引号 \"
 编程提示：用\n 或 endl 终止每一个程序
输出 double 类型的值：在程序中插入以下“魔法配方”，后续所有 double 类型(或允许保留小数的其他类型)的数字将以日常生活中最习惯的方式来输出，即保留两位小数：
cout.setf(ios::fixed);
cout.setf(ios::showpoint);
cout.precision(2);
可用其他任何非负的整数代替其中的 2，从而指定不同的小数位数。甚至能用 int类型的变量代替 2。
终端输入数据时，输入的内容会在屏幕光标位置出现。虽然如此，始终应该在程序终止之前，主动显示输入的值。这称为回显输入，作用是让用户检查输入是否被正确读取。
之所以要回显，是因为有时在屏幕上看起来没有问题的输入不一定能被计算机正确读取。例如，其中可能含有被忽视的打字错误或其他问题。通过回显输入，能对输入数据
的完整性进行测试。
